I"B<h1 id="problem-1-developing-the-strategy">Problem 1: Developing the Strategy</h1>
<p>Review the proof that <span class="math inline">\(\mathsf{SAT}\)</span> is in <span class="math inline">\(\text{PSPACE}\)</span> (Example 8.3). In a sentence or two, describe how the construction captures the exponential nature of the search space using a polynomial amount of memory.</p>
<h1 id="problem-2-space">Problem 2: Space!</h1>
<p>Next prove that the following problems are in <span class="math inline">\(\text{PSPACE}\)</span>:</p>
<ol type="a">
<li><span class="math inline">\(\mathsf{CLIQUE} = \{\, (G, k) \mid \text{\( G \) has a \( k \)-clique} \,\}\)</span>.</li>
<li><span class="math inline">\(\mathsf{SUBSET} = \{\, (S, t) \mid \text{\( S \) is a set, \( t \in \mathbb{N} \), and there exists a \( S^* \subseteq S \) such that \( \sum_{x \in S^*} x = t \).} \,\}\)</span>.</li>
</ol>
<h1 id="problem-3-generalization">Problem 3: Generalization</h1>
<p>Now that you’ve had some experience thinking about how <span class="math inline">\(\text{PSPACE}\)</span> algorithms work, let’s generalize our constructions. At this point, you should observe that there seems to be a pattern for every <span class="math inline">\(\text{NP}\)</span> problem and realizing it as a <span class="math inline">\(\text{PSPACE}\)</span> algorithm. This pattern is similar to the verifier-to-NTM direction of the proof of Theorem 7.20 (pp. 294).</p>
<p>Adapt this direction of the proof to formally prove that <span class="math inline">\(\text{NP} \subseteq \text{PSPACE}\)</span>.</p>
<p>(<em>Hint</em>: the definition of <span class="math inline">\(\text{NP}\)</span> says that you start with a verifier for the problem. You must then build a polynomial space algorithm for the problem using this verifier. What do you use your polynomial space to “remember?”)</p>
:ET